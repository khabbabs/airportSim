package edu.unm.cs.venture;

import java.awt.Dimension;
import java.util.LinkedList;
import java.util.List;

public class GateGroup implements Node {
	
	private static int UID = 0;
	private LinkedList<Edge> inputEdges;
	private LinkedList<Edge> outputEdges;
	private Dimension position;
	private String id;
	private LinkedList<Bag> curBag;
	
	public GateGroup(Dimension position, int concourse){
		this.id = "GG"+((concourse*5)+getUID());
		this.position = position;
		inputEdges = new LinkedList<Edge>();
		outputEdges = new LinkedList<Edge>();
		curBag = new LinkedList<Bag>();
	}
	
	/** Generates a unique ID for a GateGroup. */
	public static int getUID() {
		return (UID++)%5;
	}
	
	
	

	@Override
	public void onTick(int phase) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public List<Bag> getBags() {
		return this.curBag;
	}

	@Override
	public List<Edge> getInputEdges() {
		return this.inputEdges;
	}

	@Override
	public List<Edge> getOutputEdges() {
		return this.outputEdges;
	}

	@Override
	public void giveBag() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public Dimension getCoords() {
		return null;
	}

	@Override
	public Dimension getPos() {
		return this.position;
	}

	@Override
	public void enable() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void disable() {
		// TODO Auto-generated method stub
		
	}

<<<<<<< .mine
	@Override
	public void addInputEdge(Edge edge) {
		this.inputEdges.add(edge);
		
	}

	@Override
	public void addOutputEdge(Edge edge) {
		this.outputEdges.add(edge);
		
	}

=======
	@Override
	public void addInputEdge(Edge edge) {
		inputEdges.add(edge);
	}

	@Override
	public void addOutputEdge(Edge edge) {
		outputEdges.add(edge);
	}

	@Override
	public String getID() {
		return id;
	}

>>>>>>> .r328
}
